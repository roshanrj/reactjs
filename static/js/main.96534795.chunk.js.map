{"version":3,"sources":["components/common.js","utils.js","pokemon.js","App.js","index.js"],"names":["InputBox","changeEvent","initialValue","htmlFor","type","id","onChange","value","placeholder","maxLength","autoFocus","SearchResults","details","pokemonFound","className","forms","name","toUpperCase","weight","height","src","sprites","front_default","alt","types","map","val","index","key","PokemonCard","stats","base_stat","locStorage","Storage","JSON","parse","localStorage","getItem","setItem","stringify","cookie","cookieName","path","date","Date","midnight","getFullYear","getMonth","getDate","expires","toUTCString","document","i","j","k","arrayOfCookies","split","length","substr","indexOf","replace","unescape","String","prototype","initCap","this","toLowerCase","m","Pokemon","useState","inputValue","setInputValue","searchPokemon","setSearchPokemon","randomPokemon","setRandomPokemon","randomPokemonDetails","setRandomPokemonDetails","searchPokemonDetails","setSearchPokemonDetails","searchPokemonFound","setSearchPokemonFound","randomPokemonFound","setRandomPokemonFound","loading","setLoading","useEffect","checkAndGenRandomCard","axios","get","then","response","status","runOnce","data","pokemonList","results","randomCardData","randomNumber","min","max","Math","floor","random","randomGenPokemon","event","currentValue","target","trim","setTimeout","test","filter","App","component","Component","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.96534795.chunk.js","sourcesContent":["import React,{Fragment} from 'react';\r\n\r\nexport const InputBox = ({changeEvent,initialValue}) => {\r\n    return (\r\n        <form>\r\n            <label htmlFor=\"pokemon-search\">Pokemon Search Box:</label><input type=\"text\" id= \"pokemon-search\" onChange={changeEvent} value={initialValue} placeholder=\"Ex: pikachu\" maxLength=\"15\" autoFocus/>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport const SearchResults = ({details,pokemonFound}) => {\r\n    return (\r\n        <Fragment>\r\n            {\r\n            !pokemonFound ? <div>No Pokemon Found! </div> : \r\n            (\r\n            <div className=\"top-wrapper\">\r\n                <div className=\"image-wrapper\">\r\n                    <div className=\"poke-name-num\">\r\n        <span className=\"name pokemon-info\">{details.forms[0].name.toUpperCase()}</span>\r\n                    </div>\r\n                    <div className=\"size\">\r\n        <span className=\"pokemon-info\"><span className=\"pokemon-weight\">Weight: {details.weight}</span></span>\r\n                        <span className=\"pokemon-info\"><span className=\"pokemon-height\">Height: {details.height}</span></span>\r\n                    </div>\r\n                    <img src={details.sprites.front_default} alt=\"Pokemon front image\" id=\"pokemonImage\"/>\r\n                    <div id=\"types\">\r\n                    {details.types.map((val,index)=><div key={index} className={\"pokemonType pokemon-info \"+val.type.name}>{val.type.name}</div>)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            )}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport const PokemonCard= ({details,pokemonFound}) => {\r\n    return (\r\n        <Fragment>\r\n        {\r\n        pokemonFound &&  \r\n        (<div className=\"bottom-wrapper\">\r\n        <table>\r\n            <thead>\r\n                <tr><th>Base</th><th>Statistics</th></tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr><td>HP:</td><td className=\"hp\">{details.stats[5].base_stat}</td></tr>\r\n                <tr><td>Attack:</td><td className=\"attack\">{details.stats[4].base_stat}</td></tr>\r\n                <tr><td>Defense:</td><td className=\"defense\">{details.stats[3].base_stat}</td></tr>\r\n                <tr><td>Special Attack:</td><td className=\"special-attack\">{details.stats[2].base_stat}</td></tr>\r\n                <tr><td>Special Defense:</td><td className=\"special-defense\">{details.stats[1].base_stat}</td></tr>\r\n                <tr><td>Speed:</td><td className=\"speed\">{details.stats[0].base_stat}</td></tr>\r\n            </tbody>\r\n        </table>\r\n      </div>\r\n        )}\r\n      </Fragment>\r\n    );\r\n}\r\n\r\n\r\n","export const locStorage = {\r\n    checkStorage: function(){\r\n        return typeof Storage == \"function\";\r\n    },\r\n    get: function(key){\r\n        return JSON.parse(localStorage.getItem(key));\r\n    },\r\n    set: function(key,value){\r\n        localStorage.setItem(key,JSON.stringify(value));\r\n    },\r\n    remove: function(key){\r\n        localStorage.removeItem(key);\r\n    }\r\n};\r\n\r\nexport const genRandomNumber = (min,max) =>{\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport const cookie = {\r\n    setCookie : function (cookieName,value, path = '/'){\r\n                var date = new Date(),\r\n                    midnight = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 23, 59, 59),\r\n                    expires = \"; expires=\" + midnight.toUTCString();\r\n                    document.cookie = cookieName + \"=\" + value + expires + \"; path=\" + path;\r\n    },\r\n    getCookie: function(cookieName){\r\n        var i,\r\n            j,\r\n            k,\r\n            arrayOfCookies = document.cookie.split(\";\");\r\n        for (i=0; i<arrayOfCookies.length; i++){\r\n            j = arrayOfCookies[i].substr(0,arrayOfCookies[i].indexOf(\"=\"));\r\n            k = arrayOfCookies[i].substr(arrayOfCookies[i].indexOf(\"=\")+1);\r\n            j = j.replace(/^\\s+|\\s+$/g,\"\");\r\n            if (j == cookieName)\r\n                return unescape(k);\r\n        }\r\n    },\r\n    deleteCookie: function(cookieName,path){\r\n        this.setCookie(cookieName, '', null, path);\r\n    }\r\n};\r\n\r\nString.prototype.initCap = function () {\r\n    return this.toLowerCase().replace(/(?:^|\\s)[a-z]/g, function (m) {\r\n       return m.toUpperCase();\r\n    });\r\n };\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport {InputBox,PokemonCard,SearchResults} from './components/common';\r\nimport \"./css/style.css\";\r\nimport {locStorage,genRandomNumber,cookie} from './utils';\r\n\r\nconst Pokemon = () => {\r\n  const minPokemonCount = 1,\r\n        maxPokemonCount = 964,\r\n        getAllPokemonListUrl = 'https://pokeapi.co/api/v2/pokemon/?limit='+maxPokemonCount,\r\n        searchPokemonUrl = 'https://pokeapi.co/api/v2/pokemon/',\r\n        [inputValue,setInputValue] = useState(\"\"),\r\n        [searchPokemon,setSearchPokemon] = useState(\"\"),\r\n        [randomPokemon,setRandomPokemon] = useState(\"\"),\r\n        [randomPokemonDetails,setRandomPokemonDetails] = useState(\"\"),\r\n        [searchPokemonDetails,setSearchPokemonDetails] = useState(\"\"),\r\n        [searchPokemonFound,setSearchPokemonFound] = useState(false),\r\n        [randomPokemonFound,setRandomPokemonFound] = useState(false),\r\n        [loading,setLoading] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    let pokemonList = locStorage.get('pokemonList'); \r\n    if(pokemonList){\r\n      checkAndGenRandomCard();\r\n      return;\r\n    }\r\n    axios.get(getAllPokemonListUrl).then(response => {\r\n      if(response.status == 200)\r\n      runOnce(response);\r\n    });\r\n  },[]);\r\n\r\n  useEffect(()=>{\r\n    if(randomPokemon.length){\r\n      axios.get(searchPokemonUrl + randomPokemon).then(response => {\r\n        if(response.status == 200){\r\n          setRandomPokemonDetails(response.data);\r\n          setRandomPokemonFound(true);\r\n          locStorage.set('randomCard',response.data);\r\n          cookie.setCookie('isRandomCardShowed','yes'); //setting the cookie for 1 day\r\n        }\r\n      });\r\n    }\r\n  },[randomPokemon]);\r\n\r\n  useEffect(()=>{\r\n    if(searchPokemon.length){\r\n      axios.get(searchPokemonUrl + searchPokemon).then(response => {\r\n        if(response.status == 200){\r\n          setSearchPokemonDetails(response.data);\r\n          setLoading(false);\r\n          setSearchPokemonFound(true);\r\n        }\r\n      });\r\n    }\r\n  },[searchPokemon]);\r\n\r\n\r\n\r\n  const runOnce = (response) => {\r\n    let pokemonList = response.data.results; //global variable\r\n    locStorage.checkStorage() && locStorage.set('pokemonList',pokemonList);\r\n    checkAndGenRandomCard(response);\r\n  }\r\n\r\n  const checkAndGenRandomCard = (response) => {\r\n    if(!cookie.getCookie('isRandomCardShowed')){\r\n      var pokemonList = locStorage.get('pokemonList'),\r\n          randomNumber = genRandomNumber(minPokemonCount,maxPokemonCount),\r\n          randomGenPokemon = pokemonList[randomNumber] && pokemonList[randomNumber].name || '';\r\n        setRandomPokemon(randomGenPokemon);\r\n    }else{\r\n      var randomCardData = locStorage.get('randomCard');\r\n      setRandomPokemonDetails(randomCardData);\r\n      setRandomPokemonFound(true);\r\n    }\r\n  }\r\n\r\n  const onInputChangeHandler = (event) =>{\r\n    let currentValue = event.target.value.trim().toLowerCase();\r\n    setInputValue(currentValue);\r\n    setTimeout(()=>{\r\n      setSearchPokemonFound(false);\r\n      if(!(/(^[a-z\\s]*$)/i.test(currentValue))) return;\r\n        let pokemonList = locStorage.get('pokemonList'),\r\n            matchResults = pokemonList && pokemonList.filter(val=>val.name == currentValue);\r\n        if(matchResults.length){\r\n          setSearchPokemon(currentValue);\r\n        }\r\n\r\n    },1000);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"input-wrapper\">\r\n        <InputBox changeEvent={onInputChangeHandler} initialValue={inputValue}/>\r\n      </div>\r\n      <div className=\"clear20\"></div>\r\n      {loading && <div>Loading...</div>}\r\n      {!loading &&\r\n        (<div>\r\n          <div className=\"search-results\">Search Results: </div>\r\n          <div className=\"wrapper\">\r\n            <SearchResults details={searchPokemonDetails} pokemonFound={searchPokemonFound}/>\r\n            <PokemonCard details={searchPokemonDetails} pokemonFound={searchPokemonFound}/>\r\n          </div>\r\n        </div>\r\n        )\r\n      }\r\n      <div className=\"clear20\"></div>\r\n      <Fragment>\r\n        <div className=\"random-card\">Random Card :</div>\r\n        <div className=\"wrapper\">\r\n          <SearchResults details={randomPokemonDetails} pokemonFound={randomPokemonFound}/>\r\n          <PokemonCard details={randomPokemonDetails} pokemonFound={randomPokemonFound}/>\r\n        </div>\r\n      </Fragment>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Pokemon;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n//Pages\nimport Pokemon from './pokemon';\n\nclass App extends Component{\n\n\n  render(){\n      return (\n            <Router>\n                <Switch>\n                    <Route path=\"/\" component = { Pokemon }/>\n                </Switch>\n            </Router>\n      );\n  }\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}